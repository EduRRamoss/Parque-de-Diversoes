// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParqueDeDiversaoAPI.ApplicationDbContext;

#nullable disable

namespace ParqueDeDiversaoAPI.Persistence.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ParqueDeDiversaoAPI.Entities.Atracao", b =>
                {
                    b.Property<int>("codigo")
                        .HasColumnType("int");

                    b.Property<bool?>("aberto")
                        .HasColumnType("bit");

                    b.Property<double?>("custoDeEntrada")
                        .HasPrecision(12, 2)
                        .HasColumnType("float(12)");

                    b.Property<string>("descricaoAtracao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("entradasVendidas")
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("setorCodigo")
                        .HasColumnType("int");

                    b.Property<double?>("valorBrutoArrecadado")
                        .HasPrecision(8, 2)
                        .HasColumnType("float(8)");

                    b.Property<double?>("valorCustoDeManutencao")
                        .HasPrecision(12, 2)
                        .HasColumnType("float(12)");

                    b.Property<double?>("valorLiquidoArrecadado")
                        .HasPrecision(8, 2)
                        .HasColumnType("float(8)");

                    b.HasKey("codigo");

                    b.ToTable("Atracoes");
                });

            modelBuilder.Entity("ParqueDeDiversaoAPI.Entities.Barraquinha", b =>
                {
                    b.Property<int>("codigo")
                        .HasColumnType("int");

                    b.Property<bool?>("aberto")
                        .HasColumnType("bit");

                    b.Property<string>("descricaoBarraquinha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("setorCodigo")
                        .HasColumnType("int");

                    b.Property<double?>("valorBrutoArrecadado")
                        .HasPrecision(8, 2)
                        .HasColumnType("float(8)");

                    b.Property<double?>("valorCustoDeOperacao")
                        .HasPrecision(8, 2)
                        .HasColumnType("float(8)");

                    b.Property<double?>("valorLiquidoArrecadado")
                        .HasPrecision(8, 2)
                        .HasColumnType("float(8)");

                    b.HasKey("codigo");

                    b.ToTable("Barraquinhas");
                });

            modelBuilder.Entity("ParqueDeDiversaoAPI.Entities.Login", b =>
                {
                    b.Property<int>("codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codigo"));

                    b.Property<bool?>("isAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("senha")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("usuario")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("codigo");

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("ParqueDeDiversaoAPI.Entities.Setor", b =>
                {
                    b.Property<int>("codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codigo"));

                    b.Property<string>("descricaoSetor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("valorLiquidoArrecadado")
                        .HasPrecision(5, 2)
                        .HasColumnType("float(5)");

                    b.HasKey("codigo");

                    b.ToTable("Setores");
                });

            modelBuilder.Entity("ParqueDeDiversaoAPI.Entities.Atracao", b =>
                {
                    b.HasOne("ParqueDeDiversaoAPI.Entities.Setor", "setor")
                        .WithMany("atracoes")
                        .HasForeignKey("codigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("setor");
                });

            modelBuilder.Entity("ParqueDeDiversaoAPI.Entities.Barraquinha", b =>
                {
                    b.HasOne("ParqueDeDiversaoAPI.Entities.Setor", "setor")
                        .WithMany("barraquinhas")
                        .HasForeignKey("codigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("setor");
                });

            modelBuilder.Entity("ParqueDeDiversaoAPI.Entities.Setor", b =>
                {
                    b.Navigation("atracoes");

                    b.Navigation("barraquinhas");
                });
#pragma warning restore 612, 618
        }
    }
}
